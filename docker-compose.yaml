version: '3.9'
networks:
  general:
    driver: bridge
volumes:
  mongo:
    driver: local

services:
  dashboard:
    build:
      context: .
      dockerfile: ./docker/python/Dockerfile
      args:
        - 'PYTHON_VERSION=${PYTHON_VERSION}'
    volumes:
      - './src:/var/app/src'
      - './data:/var/app/data'
      - './.env:/var/app/.env'
    extra_hosts:
      - 'dockerhost:${DOCKER_HOST_IP}'
    depends_on:
      - mongo
      - redis
    ports:
      - '${DASH_APP_PORT}:8051'
    stdin_open: true
    tty: true
    networks:
      - general
  mongo:
    image: mongo
    restart: always
    environment:
      - 'MONGO_INITDB_ROOT_USERNAME=${MONGODB_USERNAME}'
      - 'MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD}'
    volumes:
      - '${DATA_PATH_HOST}/mongodb:/data/db'
    ports:
      - '${MONGODB_PORT}:27017'
    networks:
      - general
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - '${MONGODB_EXPRESS_PORT}:8081'
    environment:
      - 'ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGODB_USERNAME}'
      - 'ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGODB_PASSWORD}'
      - 'ME_CONFIG_MONGODB_URL=mongodb://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@mongo:27017/'
    depends_on:
      - mongo
    networks:
      - general
  redis:
    image: "redis:latest"
    ports:
      - '${REDIS_PORT}:6379'
    networks:
      - general
  celery:
    build:
      context: .
      dockerfile: ./docker/python/Dockerfile
      args:
        - 'PYTHON_VERSION=${PYTHON_VERSION}'
    volumes:
      - './src:/var/app/src'
      - './data:/var/app/data'
      - './.env:/var/app/.env'
    command: [ "honcho", "start", "queue" ]
    depends_on:
      - redis
    networks:
      - general